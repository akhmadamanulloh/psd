# -*- coding: utf-8 -*-
"""hipertensi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EWczl8wtNRBnDCQWNCb9qcTxkAEtE0HJ
"""

import streamlit as st
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score
from sklearn.impute import SimpleImputer

# Fungsi untuk memuat dan memproses dataset
def load_dataset():
    data = pd.read_csv('hypertension_data.csv')
    features = ['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg',
                'thalach', 'exang', 'oldpeak', 'slope', 'ca', 'thal']
    target = 'target'
    X = data[features]
    y = data[target]
    imputer = SimpleImputer(strategy='mean')
    X = imputer.fit_transform(X)
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    return X_train, X_test, y_train, y_test

# Fungsi untuk melatih model dan melakukan prediksi
def train_model(X_train, X_test, y_train):
    model = GaussianNB()
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    return y_pred

# Memuat dataset
X_train, X_test, y_train, y_test = load_dataset()

# Melatih model dan melakukan prediksi
y_pred = train_model(X_train, X_test, y_train)

# Menampilkan akurasi prediksi
accuracy = accuracy_score(y_test, y_pred)

# Menampilkan antarmuka web dengan Streamlit
st.title("Deteksi Penyakit Hipertensi menggunakan Naive Bayes")

# Input pengguna
age = st.slider("Usia", min_value=0, max_value=100, step=1, value=50)
sex = st.selectbox("Jenis Kelamin", ["Laki-laki", "Perempuan"])
cp = st.selectbox("Tipe Nyeri Dada", [0, 1, 2, 3])
trestbps = st.slider("Tekanan Darah Istirahat", min_value=0, max_value=200, step=1, value=120)
# Lanjutkan dengan input variabel lainnya

# Membuat dataframe dengan input pengguna
input_data = pd.DataFrame({
    'age': [age],
    'sex': [sex],
    'cp': [cp],
    'trestbps': [trestbps]
    # Lanjutkan dengan variabel lainnya
})

# Prediksi dengan model yang sudah dilatih
prediction = train_model(X_train, input_data.values, y_train)

# Menampilkan hasil prediksi
st.write("Hasil Prediksi: ", prediction[0])
st.write("Akurasi Prediksi: {:.2f}".format(accuracy))